{"openapi":"3.0.3","info":{"title":"Shadow's Dash API","description":"WARNING: This documentation is still in the making. Some information might be incomplete or wrong.\n\nThis is the API for Shadow's Dash instances.","version":"3.3.246 (Korat)"},"components":{"securitySchemes":{"userTokenAuth":{"type":"http","scheme":"bearer","description":"The bearer token of a NORMAL/STAFF/ADMIN user."}},"schemas":{}},"paths":{"/api/auth/register/":{"post":{"parameters":[],"operationId":"postApiAuthRegister","summary":"Register a new user","description":"This endpoint allows a user to register a new account using a username, email, and password.\n\nWARNING: This endpoint checks if the user passed the Cloudflare Turnstile challenge, which cannot be avoided if you have Cloudflare turnstile enabled.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"User created","error":null,"id":"user_id","accessToken":"access_token"}}}}}},"400":{"content":{"application/json":{"examples":{"invalidInput":{"value":{"statusCode":400,"message":"Invalid input","error":"Bad request"}}}}}},"403":{"content":{"application/json":{"examples":{"forbidden":{"value":{"statusCode":403,"message":"Forbidden","error":"Not allowed"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error, check the details.","error":"Internal server error","details":"(Pterodactyl error): error details"}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"username":{"description":"The desired username for the new account. Must be 3-16 characters long and contain only letters, numbers, periods, and underscores.","type":"string"},"email":{"description":"The email address for the new account. Must be a valid email format.","type":"string"},"password":{"description":"Passwords must be at least 8 characters long. Passwords must include at least one uppercase letter, one lowercase letter, one digit, and one special character.","type":"string"}},"required":["username","email","password"]}},"multipart/form-data":{"schema":{"type":"object","properties":{"username":{"description":"The desired username for the new account. Must be 3-16 characters long and contain only letters, numbers, periods, and underscores.","type":"string"},"email":{"description":"The email address for the new account. Must be a valid email format.","type":"string"},"password":{"description":"Passwords must be at least 8 characters long. Passwords must include at least one uppercase letter, one lowercase letter, one digit, and one special character.","type":"string"}},"required":["username","email","password"]}},"text/plain":{"schema":{"type":"object","properties":{"username":{"description":"The desired username for the new account. Must be 3-16 characters long and contain only letters, numbers, periods, and underscores.","type":"string"},"email":{"description":"The email address for the new account. Must be a valid email format.","type":"string"},"password":{"description":"Passwords must be at least 8 characters long. Passwords must include at least one uppercase letter, one lowercase letter, one digit, and one special character.","type":"string"}},"required":["username","email","password"]}}}}}},"/api/events/advent/status/":{"get":{"operationId":"getApiEventsAdventStatus","summary":"Get Advent Calendar Status","description":"This endpoint retrieves the status of the advent calendar, including whether it is open, the current day, and the status of each day if requested.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"error":null,"open":true,"day":5,"daysStatus":[{"claimed":false,"title":"Day 1","description":"Reward description","image":"image_url"}],"time":1670000000000,"start":1669852800000,"next":1670092800000,"background":"background_image_url","timezone":"UTC"}}}}}},"403":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":403,"error":"Unauthorized","message":"Invalid token"}}}}}},"423":{"content":{"application/json":{"examples":{"locked":{"description":"The advent calendar is currently not opened.","value":{"statusCode":423,"error":"Locked","open":false,"day":null,"time":1670000000000,"start":1669852800000,"next":null,"background":"background_image_url","timezone":"UTC"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error","error":"Internal server error"}}}}}}}}},"/api/invoices/{id}/download/":{"get":{"operationId":"getApiInvoicesByIdDownload","summary":"Download an invoice PDF","description":"This endpoint generates and downloads a PDF for the specified invoice ID. The invoice must exist in the database, and the system will temporarily store the generated PDF for download.","responses":{"200":{"content":{"application/pdf":{"examples":{"success":{"value":"Binary PDF file representing the invoice."}}}}},"404":{"content":{"application/json":{"examples":{"notFound":{"value":{"statusCode":404,"message":"Invoice not found","error":"Not found"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal Server Error","error":"Internal Server Error"}}}}}}},"parameters":[{"schema":{"type":"string"},"in":"path","name":"id","required":true}]}},"/api/server/{id}/disableAutomaticRenewal/":{"post":{"operationId":"postApiServerByIdDisableAutomaticRenewal","summary":"Disable automatic renewal for a server","description":"This endpoint disables the automatic renewal for a server. It supports both Stripe and PayPal subscriptions. The user must be authorized and either own the server or have admin privileges.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Disabled automatic renewal","error":null}}}}}},"401":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":401,"message":"No authorization header","error":"Unauthorized"}}}}}},"403":{"content":{"application/json":{"examples":{"forbidden":{"value":{"statusCode":403,"message":"You are not allowed to access this resource","error":"Forbidden"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal Server Error","error":"Internal Server Error"}}}}}}},"parameters":[{"schema":{"type":"string"},"in":"path","name":"id","required":true}]}},"/api/staff/unban/":{"post":{"parameters":[],"operationId":"postApiStaffUnban","summary":"Unban a user","description":"This endpoint allows an admin or staff member to unban a user by providing their user ID.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Unbanned user.","error":null}}}}}},"400":{"content":{"application/json":{"examples":{"badRequest":{"value":{"statusCode":400,"message":"Missing parameters","error":"Bad Request"}}}}}},"403":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":403,"message":"Invalid token","error":"Unauthorized"}},"forbidden":{"value":{"statusCode":403,"message":"You are not allowed to access this resource","error":"Forbidden"}}}}}},"404":{"content":{"application/json":{"examples":{"notFound":{"value":{"statusCode":404,"message":"User not found","error":"Not Found"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error, check the details.","error":"Internal server error","details":"(Pterodactyl error): error details"}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"user":{"description":"The ID of the user to unban. Must be a valid MongoDB ObjectId.","type":"string"}},"required":["user"]}},"multipart/form-data":{"schema":{"type":"object","properties":{"user":{"description":"The ID of the user to unban. Must be a valid MongoDB ObjectId.","type":"string"}},"required":["user"]}},"text/plain":{"schema":{"type":"object","properties":{"user":{"description":"The ID of the user to unban. Must be a valid MongoDB ObjectId.","type":"string"}},"required":["user"]}}}}}},"/api/staff/ban/":{"post":{"parameters":[],"operationId":"postApiStaffBan","summary":"Ban a user","description":"This endpoint allows an admin or staff member to ban a user from the platform. It requires a valid authorization token and the user must have the appropriate permissions.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Banned user.","error":null}}}}}},"400":{"content":{"application/json":{"examples":{"missingParameters":{"value":{"statusCode":400,"message":"Missing parameters","error":"Bad Request"}},"invalidDuration":{"value":{"statusCode":400,"message":"Invalid duration","error":"Bad Request"}}}}}},"403":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":403,"message":"Invalid token","error":"Unauthorized"}},"forbidden":{"value":{"statusCode":403,"message":"You are not allowed to access this resource","error":"Forbidden"}},"adminBanAttempt":{"value":{"statusCode":403,"message":"You are not allowed to ban an admin","error":"Forbidden"}}}}}},"404":{"content":{"application/json":{"examples":{"userNotFound":{"value":{"statusCode":404,"message":"User not found","error":"Not Found"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error, check the details.","error":"Internal server error","details":"Error details"}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"user":{"description":"The ObjectId of the user to ban.","type":"string"},"reason":{"description":"The reason for banning the user.","type":"string"},"duration":{"description":"The duration of the ban in hours. Use 0 for a permanent ban.","type":"number"}},"required":["user","reason","duration"]}},"multipart/form-data":{"schema":{"type":"object","properties":{"user":{"description":"The ObjectId of the user to ban.","type":"string"},"reason":{"description":"The reason for banning the user.","type":"string"},"duration":{"description":"The duration of the ban in hours. Use 0 for a permanent ban.","type":"number"}},"required":["user","reason","duration"]}},"text/plain":{"schema":{"type":"object","properties":{"user":{"description":"The ObjectId of the user to ban.","type":"string"},"reason":{"description":"The reason for banning the user.","type":"string"},"duration":{"description":"The duration of the ban in hours. Use 0 for a permanent ban.","type":"number"}},"required":["user","reason","duration"]}}}}}},"/api/user/{id}/usage/":{"get":{"operationId":"getApiUserByIdUsage","summary":"Get user resource usage","description":"This endpoint retrieves the resource usage of a user, including CPU, memory, disk, and other limits. It also checks if the user exceeds their resource limits and suspends servers if necessary.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Servers found","error":null,"resources":{"cpu":0,"memory":0,"disk":0,"databases":0,"allocations":0,"backups":0,"servers":0},"errors":0,"limits":{"cpu":100,"memory":2048,"disk":50000,"servers":5,"databases":10,"backups":5,"allocations":10}}}}}}},"404":{"content":{"application/json":{"examples":{"notFound":{"value":{"statusCode":404,"error":"Not found","message":"User not found"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error, check the details.","error":"Internal server error","details":"Error details"}}}}}}},"parameters":[{"schema":{"type":"string"},"in":"path","name":"id","required":true}]}},"/api/user/delete/":{"delete":{"operationId":"deleteApiUserDelete","summary":"Delete user account","description":"This endpoint allows a user to delete their account. The user must provide a valid authorization token.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Account deleted successfully.","error":null}}}}}},"403":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":403,"message":"Invalid token","error":"Unauthorized"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal Server Error","error":"Internal Server Error"}}}}}}}}},"/api/auth/login/":{"post":{"parameters":[],"operationId":"postApiAuthLogin","summary":"Authenticate user with email and password","description":"This endpoint authenticates a user using their email and password. If 2FA is enabled, it will indicate that 2FA is required.","responses":{"200":{"content":{"application/json":{"examples":{"twofactorrequired":{"description":"Successful login and 2FA required.","value":{"statusCode":200,"message":"2FA required","error":null,"accessToken":null,"id":"user mongo id","requires2FA":true}},"successfulno2FA":{"description":"Successful login and 2FA not required.","value":{"statusCode":200,"message":"Authenticated","error":null,"accessToken":"user token","id":"user mongo id","requires2FA":false}},"invalidcredentials":{"description":"Invalid email or password.","value":{"statusCode":401,"error":"Invalid email or password.","message":"Invalid email or password."}},"banneduser":{"description":"User is banned.","value":{"statusCode":403,"error":"Forbidden","message":"You are banned.","banDetails":{"reason":"Reason for ban"}}},"vpnblocked":{"description":"User is using a VPN or proxy.","value":{"statusCode":403,"error":"Forbidden","message":"You are using a VPN or a proxy."}},"disabledlogin":{"description":"Email/Password login is disabled.","value":{"statusCode":403,"error":"Not allowed","message":"Email/Password login is disabled."}},"badrequest":{"description":"Bad request due to missing email or password.","value":{"statusCode":400,"error":"Bad request","message":"Bad request"}},"servererror":{"description":"Internal server error.","value":{"statusCode":500,"error":"Internal server error","message":"Internal server error, check the details."}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"email":{"format":"email","description":"Email address of the user","type":"string"},"password":{"description":"Password of the user","type":"string"}},"required":["email","password"]}},"multipart/form-data":{"schema":{"type":"object","properties":{"email":{"format":"email","description":"Email address of the user","type":"string"},"password":{"description":"Password of the user","type":"string"}},"required":["email","password"]}},"text/plain":{"schema":{"type":"object","properties":{"email":{"format":"email","description":"Email address of the user","type":"string"},"password":{"description":"Password of the user","type":"string"}},"required":["email","password"]}}}}}},"/api/coupon/{code}/":{"get":{"operationId":"getApiCouponByCode","summary":"Get coupon details","description":"This endpoint retrieves the details of a coupon by its code. If the coupon is not found, a 404 error is returned.\n\nWARNING: A coupon holds coins. You might be looking for Discounts.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Coupon found","coupon":{"code":"exampleCode","coins":100,"maxClaims":10,"expires":1699999999,"createdBy":"admin","redeemed":["userid","userid"]},"error":null}}}}}},"404":{"content":{"application/json":{"examples":{"notFound":{"value":{"statusCode":404,"message":"The code you entered is invalid","error":"Not found"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error","error":"Internal server error"}}}}}}},"parameters":[{"schema":{"type":"string"},"in":"path","name":"code","required":true}]}},"/api/coins/leaderboard/":{"get":{"operationId":"getApiCoinsLeaderboard","summary":"Get leaderboard","description":"This endpoint retrieves the top 100 users with the most coins. It returns their public information, such as username, coins, and avatar URL.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Leaderboard found","error":null,"leaderboard":[{"_id":"user_id","username":"example_user","coins":1000,"avatarUrl":"https://example.com/avatar.jpg"}]}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal Server Error","error":"Internal Server Error"}}}}}}}}},"/api/discount/{discount}/":{"get":{"operationId":"getApiDiscountByDiscount","summary":"Get discount details","description":"This endpoint retrieves the details of a discount by its code.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Success","discount":{"_id":"ObjectId","code":"DISCOUNT_CODE","reduction":20,"maxClaims":100,"expires":1699999999,"redeemed":["user1","user2"],"allowedPlans":["plan1","plan2"],"recurrent":false}}}}}}},"404":{"content":{"application/json":{"examples":{"notFound":{"value":{"statusCode":404,"error":"Not found","message":"Discount not found"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"error":"Internal server error","message":"Internal server error"}}}}}}},"parameters":[{"schema":{"type":"string"},"in":"path","name":"discount","required":true}]}},"/api/auth/pwreset/send/":{"post":{"parameters":[],"operationId":"postApiAuthPwresetSend","summary":"Send a one-time reset password code","description":"This endpoint sends a one-time code to the user's email adress. This endpoint will always return 200 no matter what, to avoid email discovery.","responses":{"200":{"content":{"application/json":{"examples":{"basic":{"value":{"statusCode":200,"message":"Password reset email sent successfully.","error":null}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"email":{"format":"email","description":"Email address of the user","type":"string"}},"required":["email"]}},"multipart/form-data":{"schema":{"type":"object","properties":{"email":{"format":"email","description":"Email address of the user","type":"string"}},"required":["email"]}},"text/plain":{"schema":{"type":"object","properties":{"email":{"format":"email","description":"Email address of the user","type":"string"}},"required":["email"]}}}}}},"/api/coupon/{code}/claim/":{"post":{"operationId":"postApiCouponByCodeClaim","summary":"Claim a coupon","description":"This endpoint allows a user to claim a coupon using its code. The user must provide a valid authorization token in the request header.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Code redeemed","amount":100,"error":null}}}}}},"401":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":401,"message":"No authorization header","error":"Unauthorized"}}}}}},"403":{"content":{"application/json":{"examples":{"forbidden":{"value":{"statusCode":403,"message":"You have already redeemed this coupon","error":"Forbidden"}}}}}},"404":{"content":{"application/json":{"examples":{"notFound":{"value":{"statusCode":404,"message":"The code you entered is invalid","error":"Not found"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error, check the details.","error":"Internal server error"}}}}}}},"parameters":[{"schema":{"type":"string"},"in":"path","name":"code","required":true}]}},"/api/earn/jfr/listing/":{"get":{"operationId":"getApiEarnJfrListing","summary":"Fetch JFR listing","description":"This endpoint retrieves the JFR listing and refreshes guild data if necessary. Requires a valid authorization token.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"listing":[{"_id":"67e4ec2eafca253ddf5e4074","uid":"user id that submitted the jfr","guild":"discord guild id","invite":"discord invite","members":1000,"coins":400,"info":{},"lastDataRefresh":1745824008669}]}}}}}},"401":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":401,"error":"Unauthorized","message":"No authorization header"}}}}}},"403":{"content":{"application/json":{"examples":{"forbidden":{"value":{"statusCode":403,"error":"Unauthorized","message":"Invalid token"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error","error":"Internal server error"}}}}}}}}},"/api/earn/top/":{"get":{"operationId":"getApiEarnTop","summary":"Get leaderboard","description":"This endpoint retrieves the top 10 users based on their earnings today. It returns their username, coins, earnings today, avatar URL, and last seen timestamp.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Leaderboard found","error":null,"leaderboard":[{"_id":"user_id","username":"example_user","coins":100,"earnedToday":50,"avatarUrl":"https://example.com/avatar.jpg","lastSeen":1698765432000}]}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error","error":"An unexpected error occurred"}}}}}}}}},"/api/earn/methods/":{"get":{"operationId":"getApiEarnMethods","summary":"Get earning methods","description":"This endpoint retrieves a list of earning methods sorted by clicks in descending order. It also includes settings for Linkvertise and Discord Join Reward if they are enabled.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"other":[],"linkvertise":{"enabled":true,"userid":"linkvertise user","reward":10,"dailyLimit":10},"jfr":{"enabled":true,"minMembers":10,"maxMembers":5000,"maxReward":1000,"minReward":10,"pricePerRewardUnit":0.05,"pricePerMember":0.004,"payment":"money"}}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error","error":"An unexpected error occurred"}}}}}}}}},"/api/earn/jfr/order/":{"post":{"parameters":[],"operationId":"postApiEarnJfrOrder","summary":"Create a JFR activation invoice","description":"This endpoint allows a user to create an invoice for activating JFR (Join For Rewards) for a specified number of members and coins in a Discord server.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Created invoice","error":null,"invoice":"invoice_id"}}}}}},"400":{"content":{"application/json":{"examples":{"invalidInput":{"value":{"statusCode":400,"message":"Invalid input","error":"Bad Request"}}}}}},"401":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":401,"message":"You are not logged in","error":"Unauthorized"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error","error":"Internal server error"}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"invite":{"description":"The Discord invite link or code for the server.","type":"string"},"members":{"description":"The number of members to activate the JFR for.","type":"number"},"coins":{"description":"The number of coins to activate the JFR for.","type":"number"}},"required":["invite","members","coins"]}},"multipart/form-data":{"schema":{"type":"object","properties":{"invite":{"description":"The Discord invite link or code for the server.","type":"string"},"members":{"description":"The number of members to activate the JFR for.","type":"number"},"coins":{"description":"The number of coins to activate the JFR for.","type":"number"}},"required":["invite","members","coins"]}},"text/plain":{"schema":{"type":"object","properties":{"invite":{"description":"The Discord invite link or code for the server.","type":"string"},"members":{"description":"The number of members to activate the JFR for.","type":"number"},"coins":{"description":"The number of coins to activate the JFR for.","type":"number"}},"required":["invite","members","coins"]}}}}}},"/api/eggs/{id}/":{"get":{"operationId":"getApiEggsById","summary":"Get egg by ID","description":"This endpoint retrieves an egg by its ID. The ID is passed as a parameter in the URL.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Egg found","error":null,"egg":{"_id":"ObjectId","egg":1,"nest":1,"icon":"icon_url","image":"image_url","category":"category_name","description":"Egg description","name":"Egg name","requiredSubscriptions":["subscription1","subscription2"],"envVars":{"VAR1":"value1","VAR2":"value2"},"servers":10}}}}}}},"404":{"content":{"application/json":{"examples":{"notFound":{"value":{"statusCode":404,"message":"Not found","error":"Not found"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error","error":"Internal server error"}}}}}}},"parameters":[{"schema":{"type":"string"},"in":"path","name":"id","required":true}]}},"/api/events/advent/days/{day}/":{"get":{"operationId":"getApiEventsAdventDaysByDay","summary":"Check Advent Calendar Claim Status","description":"This endpoint checks if a user has claimed a specific day in the advent calendar. The user must provide a valid authorization token and a valid day parameter (1-24).","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"hasClaimed":true,"day":1,"reward":"Reward details"}}}}}},"400":{"content":{"application/json":{"examples":{"invalidDay":{"value":{"statusCode":400,"error":"Bad Request","message":"Invalid day"}}}}}},"401":{"content":{"application/json":{"examples":{"noAuthHeader":{"value":{"statusCode":401,"error":"Unauthorized","message":"No authorization header"}}}}}},"403":{"content":{"application/json":{"examples":{"invalidToken":{"value":{"statusCode":403,"error":"Unauthorized","message":"Invalid token"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error","error":"Internal server error"}}}}}}},"parameters":[{"schema":{"type":"string"},"in":"path","name":"day","required":true}]}},"/api/eggs/":{"get":{"operationId":"getApiEggs","summary":"Get all eggs","description":"This endpoint retrieves all eggs from the database, including the number of servers associated with each egg. The eggs are sorted by the number of servers in descending order.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Eggs found","error":null,"eggs":[{"_id":"ObjectId","egg":1,"nest":1,"icon":"icon_url","image":"image_url","category":"category_name","description":"description_text","name":"egg_name","requiredSubscriptions":["subscription1","subscription2"],"envVars":{"VAR1":"value1","VAR2":"value2"},"servers":10}]}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal Server Error","error":"Internal Server Error"}}}}}}}}},"/api/mobile/token-exchange/":{"post":{"operationId":"postApiMobileToken-exchange","responses":{"200":{}}}},"/api/locations/":{"get":{"operationId":"getApiLocations","summary":"Get all locations","description":"This endpoint retrieves all locations along with the count of servers in each location.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Locations found","error":null,"locations":[{"_id":"location_id","servers":5,"pid":123,"name":"Location Name","flag":"Country Flag","maxservers":100,"latencyurl":"http://latency.url","requiredRank":1,"maintenance":false,"requiredSubscriptions":["sub1","sub2"],"coinRenewal":{"amount":10,"hours":24},"platform":"PTERODACTYL or VIRTFUSION or SDORDER (private)"}]}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal Server Error","error":"Internal Server Error"}}}}}}}}},"/api/invoices/{id}/":{"get":{"operationId":"getApiInvoicesById","summary":"Get an invoice by ID","description":"This endpoint retrieves an invoice by its ID. Only accessible by the invoice owner, ADMIN, or STAFF users.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Invoice found","error":null,"invoice":{"_id":"invoice_id","uid":"user_id","name":"Invoice Name","paid":true,"duedate":1672531200,"paiddate":1672617600,"created":1672444800,"amount":100,"item":"Item description","paypalOrder":"paypal_order_id","activationInvoice":true,"discount":"discount_id","received":100,"paidpartial":false,"originalAmount":120,"attachedServer":"server_id"}}}}}}},"403":{"content":{"application/json":{"examples":{"forbidden":{"value":{"statusCode":403,"message":"You are not allowed to access this resource","error":"Forbidden"}}}}}},"404":{"content":{"application/json":{"examples":{"notFound":{"value":{"statusCode":404,"message":"Invoice not found","error":"Not found"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal Server Error","error":"Internal Server Error"}}}}}}},"parameters":[{"schema":{"type":"string"},"in":"path","name":"id","required":true}]}},"/api/locations/{id}/queues/":{"get":{"operationId":"getApiLocationsByIdQueues","summary":"Get queue information by location ID","description":"This endpoint retrieves the queue information for a specific location ID, including the total number of servers and the breakdown of queues by priority levels.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"error":null,"total":42,"queuesbypriority":{"staff":10,"premium":20,"free":12}}}}}}},"404":{"content":{"application/json":{"examples":{"notFound":{"value":{"statusCode":404,"error":"Not found","message":"Not found"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error, check the details.","error":"Internal server error","details":"Error details"}}}}}}},"parameters":[{"schema":{"type":"string"},"in":"path","name":"id","required":true}]}},"/api/server/{id}/delete/":{"delete":{"operationId":"deleteApiServerByIdDelete","summary":"Delete a server","description":"This endpoint allows a user to delete a server by its ID. The user must be authorized and either own the server or have admin privileges.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Server deleted","error":null}}}}}},"401":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":401,"message":"No authorization header","error":"Unauthorized"}}}}}},"403":{"content":{"application/json":{"examples":{"forbidden":{"value":{"statusCode":403,"message":"You are not allowed to access this resource","error":"Forbidden"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal Server Error","error":"Internal Server Error"}}}}}}},"parameters":[{"schema":{"type":"string"},"in":"path","name":"id","required":true}]}},"/api/server/{id}/renew/":{"post":{"parameters":[{"schema":{"type":"string"},"in":"path","name":"id","required":true}],"operationId":"postApiServerByIdRenew","summary":"Renew a server","description":"This endpoint allows a user to renew a server by spending coins. The user must pass the Cloudflare Turnstile challenge.\n\nIf an ADMIN Bearer token is used, they can renew any server without owning it.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Server renewed","error":null}}}}}},"401":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":401,"message":"No authorization header","error":"Unauthorized"}}}}}},"403":{"content":{"application/json":{"examples":{"forbidden":{"value":{"statusCode":403,"message":"You are not allowed to access this resource","error":"Forbidden"}},"insufficientCoins":{"value":{"statusCode":403,"message":"You do not have enough coins to renew this server","error":"Forbidden"}},"captchaFailed":{"value":{"statusCode":403,"message":"Could not verify captcha.","error":"Forbidden"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal Server Error","error":"Internal Server Error"}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"turnstile":{"description":"The Cloudflare Turnstile response token for captcha verification. If you are using an Admin bearer token, the turnstile token is not verified, but this field is still required, in that case, you can leave it empty or put a dummy token.","type":"string"}},"required":["turnstile"]}},"multipart/form-data":{"schema":{"type":"object","properties":{"turnstile":{"description":"The Cloudflare Turnstile response token for captcha verification. If you are using an Admin bearer token, the turnstile token is not verified, but this field is still required, in that case, you can leave it empty or put a dummy token.","type":"string"}},"required":["turnstile"]}},"text/plain":{"schema":{"type":"object","properties":{"turnstile":{"description":"The Cloudflare Turnstile response token for captcha verification. If you are using an Admin bearer token, the turnstile token is not verified, but this field is still required, in that case, you can leave it empty or put a dummy token.","type":"string"}},"required":["turnstile"]}}}}}},"/api/server/queue/{id}/delete/":{"delete":{"operationId":"deleteApiServerQueueByIdDelete","summary":"Delete a queued server","description":"This endpoint allows the owner of a queued server or an admin to delete the server from the queue.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Server deleted","error":null}}}}}},"401":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":401,"message":"No authorization header","error":"Unauthorized"}}}}}},"403":{"content":{"application/json":{"examples":{"forbidden":{"value":{"statusCode":403,"message":"You are not allowed to access this resource","error":"Forbidden"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal Server Error","error":"Internal Server Error"}}}}}}},"parameters":[{"schema":{"type":"string"},"in":"path","name":"id","required":true}]}},"/api/shop/{id}/":{"get":{"operationId":"getApiShopById","summary":"Get shop item by ID","description":"This endpoint retrieves a shop item by its ID. The ID is passed as a parameter in the URL.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Item found","error":null,"item":{"amountAllowedPerCustomer":1,"_id":"64b7f3c2e4b0a3d2f8e4c123","name":"Sample Item","description":"This is a sample item.","price":10.99,"type":"digital","image":"https://example.com/image.png","monthly":false,"billingCycles":[1,3,6],"renewable":true,"stock":100,"purchases":10,"category":"Software","platform":"Windows"}}}}}}},"404":{"content":{"application/json":{"examples":{"notFound":{"value":{"statusCode":404,"error":"Not found","message":"User not found"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error","error":"Internal server error"}}}}}}},"parameters":[{"schema":{"type":"string"},"in":"path","name":"id","required":true}]}},"/api/server/{id}/editPsp/":{"patch":{"parameters":[{"schema":{"type":"string"},"in":"path","name":"id","required":true}],"operationId":"patchApiServerByIdEditPsp","summary":"Edit server details","description":"This endpoint allows a user to edit the details of a server, including its name and plan. The user must be authorized to make changes to the server. If you are using an ADMIN bearer token, you can edit any server without owning it.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Server updated successfully","error":null}}}}}},"400":{"content":{"application/json":{"examples":{"invalidInput":{"value":{"statusCode":400,"message":"Invalid payload input","error":"Bad Request"}},"invalidPlan":{"value":{"statusCode":400,"message":"Invalid plan","error":"Bad Request"}},"nonTransferrablePlan":{"value":{"statusCode":400,"message":"This service cannot be transferred to the selected plan.","error":"Bad Request"}}}}}},"403":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":403,"message":"Invalid token","error":"Unauthorized"}},"forbidden":{"value":{"statusCode":403,"message":"You are not allowed to access this resource","error":"Forbidden"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"An unknown error occurred while creating the server. Please try again later.","error":"Internal Server Error"}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"description":"The new name for the server.","type":"string"},"plan":{"description":"The ID of the new plan to assign to the server.","type":"string"}},"required":["name","plan"]}},"multipart/form-data":{"schema":{"type":"object","properties":{"name":{"description":"The new name for the server.","type":"string"},"plan":{"description":"The ID of the new plan to assign to the server.","type":"string"}},"required":["name","plan"]}},"text/plain":{"schema":{"type":"object","properties":{"name":{"description":"The new name for the server.","type":"string"},"plan":{"description":"The ID of the new plan to assign to the server.","type":"string"}},"required":["name","plan"]}}}}}},"/api/server/{id}/edit/":{"patch":{"parameters":[{"schema":{"type":"string"},"in":"path","name":"id","required":true}],"operationId":"patchApiServerByIdEdit","summary":"Edit server resources","description":"This endpoint allows a user to edit the resources of an existing server. The user must provide valid authorization and ensure the requested resources are within their account limits.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Server updated successfully","error":null}}}}}},"400":{"content":{"application/json":{"examples":{"invalidInput":{"value":{"statusCode":400,"message":"Invalid payload input","error":"Bad Request"}}}}}},"403":{"content":{"application/json":{"examples":{"forbidden":{"value":{"statusCode":403,"message":"You are not allowed to access this resource","error":"Forbidden"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"An unknown error occurred while creating the server. Please try again later.","error":"Internal Server Error"}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"description":"The new name for the server.","type":"string"},"cpu":{"description":"The desired CPU percentage for the server.","type":"number"},"memory":{"description":"The desired memory (in MB) for the server.","type":"number"},"disk":{"description":"The desired disk space (in MB) for the server.","type":"number"},"allocations":{"description":"The desired number of allocations for the server.","type":"number"},"databases":{"description":"The desired number of databases for the server.","type":"number"},"backups":{"description":"The desired number of backups for the server.","type":"number"}},"required":["name","cpu","memory","disk","allocations","databases","backups"]}},"multipart/form-data":{"schema":{"type":"object","properties":{"name":{"description":"The new name for the server.","type":"string"},"cpu":{"description":"The desired CPU percentage for the server.","type":"number"},"memory":{"description":"The desired memory (in MB) for the server.","type":"number"},"disk":{"description":"The desired disk space (in MB) for the server.","type":"number"},"allocations":{"description":"The desired number of allocations for the server.","type":"number"},"databases":{"description":"The desired number of databases for the server.","type":"number"},"backups":{"description":"The desired number of backups for the server.","type":"number"}},"required":["name","cpu","memory","disk","allocations","databases","backups"]}},"text/plain":{"schema":{"type":"object","properties":{"name":{"description":"The new name for the server.","type":"string"},"cpu":{"description":"The desired CPU percentage for the server.","type":"number"},"memory":{"description":"The desired memory (in MB) for the server.","type":"number"},"disk":{"description":"The desired disk space (in MB) for the server.","type":"number"},"allocations":{"description":"The desired number of allocations for the server.","type":"number"},"databases":{"description":"The desired number of databases for the server.","type":"number"},"backups":{"description":"The desired number of backups for the server.","type":"number"}},"required":["name","cpu","memory","disk","allocations","databases","backups"]}}}}}},"/api/shop/resource/{id}/purchase/":{"post":{"operationId":"postApiShopResourceByIdPurchase","parameters":[{"schema":{"type":"string"},"in":"path","name":"id","required":true}],"responses":{"200":{}}}},"/api/shop/resource/listing/":{"get":{"operationId":"getApiShopResourceListing","summary":"Get Coin Shop Listing","description":"This endpoint retrieves a list of coin shop items. Items can be filtered to exclude hidden items by default unless the `showhidden` query parameter is set to `true`.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"listing":[{"_id":"64b8f3e8f2a4e5d6c7a8b9c0","name":"Item Name","price":100,"priceFor":"coins","rawPriceFor":100,"resource":"resource_id","buyable":true,"id":"item_id","icon":"icon_url"}]}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error","error":"An unexpected error occurred"}}}}}}}}},"/api/shop/listing/":{"get":{"operationId":"getApiShopListing","summary":"Get shop listing","description":"This endpoint retrieves a list of shop items. The items are sorted by their creation date in descending order.\n\nTo see more documentation (as the billingCycle object might not be really clear), view the Types section of this documentation.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Listing found","error":null,"listing":[{"amountAllowedPerCustomer":1,"_id":"64b7f3c2e4b0f5a1d2c3e4f5","name":"Example Item","description":"This is an example shop item.","price":10.99,"type":"digital","image":"https://example.com/image.png","monthly":false,"billingCycles":[-1,420,700],"renewable":true,"productContent":{"memory":1024,"cpu":2,"disk":50},"invisible":false,"availableIn":0,"availableUntil":0,"stock":100,"purchases":10,"category":"Example Category","platform":"Example Platform"}]}}}}}},"404":{"content":{"application/json":{"examples":{"notFound":{"value":{"statusCode":404,"error":"Not found","message":"User not found"}}}}}}}}},"/api/server/queue/{id}/":{"get":{"operationId":"getApiServerQueueById","summary":"Get server queue details","description":"This endpoint retrieves details about a server in the queue, including its position, priority, and related metadata.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Server found","error":null,"info":{"_id":"server_id","name":"Server Name","priority":2,"location":{},"egg":{},"position":{"current":1,"total":10},"queuesbypriority":{"staff":2,"premium":5,"free":3}}}}}}}},"404":{"content":{"application/json":{"examples":{"notFound":{"value":{"statusCode":404,"message":"Not found","error":"Not found"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error","error":"Internal server error"}}}}}}},"parameters":[{"schema":{"type":"string"},"in":"path","name":"id","required":true}]}},"/api/server/{id}/":{"get":{"operationId":"getApiServerById","summary":"Get server details","description":"This endpoint retrieves detailed information about a server by its ID. It includes data from both the local database and the Pterodactyl API.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Server found","error":null,"server":{"_id":"64f1a2b3c4d5e6f7890a1b2c","uid":"64f1a2b3c4d5e6f7890a1b2d","pid":"ptero123","iid":42,"location":"64f1a2b3c4d5e6f7890a1b2e","egg":"minecraft","created":1697040000,"expires":1699641600,"suspentionReason":null,"suspended":false,"awaitingPayment":false,"invoice":null,"renewal":null,"nextCoinsRenewal":null,"stripeSubscription":null,"paypalSubscription":null,"platform":"PTERODACTYL","ip":"192.168.1.1:25565","limits":{"maxusers":5000},"container":{"installed":true},"node":{},"resources":{},"owner":{}}}}}}}},"404":{"content":{"application/json":{"examples":{"notFound":{"value":{"statusCode":404,"message":"Server not found","error":"Not found"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error, check the details.","error":"Internal server error","details":"(Pterodactyl error): error details"}}}}}}},"parameters":[{"schema":{"type":"string"},"in":"path","name":"id","required":true}]}},"/api/shop/plans/{id}/purchase/":{"post":{"parameters":[{"schema":{"type":"string"},"in":"path","name":"id","required":true}],"operationId":"postApiShopPlansByIdPurchase","summary":"Purchase a plan","description":"This endpoint allows a user to purchase a plan by creating an invoice. The user must be authenticated and provide a valid plan ID.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Created invoice","error":null,"invoice":"invoice_id"}}}}}},"400":{"content":{"application/json":{"examples":{"invalidInput":{"value":{"statusCode":400,"message":"Invalid input","error":"Bad Request"}},"outOfStock":{"value":{"statusCode":400,"message":"Plan is out of stock","error":"Bad Request"}},"notAvailable":{"value":{"statusCode":400,"message":"Plan is not available yet","error":"Bad Request"}},"expired":{"value":{"statusCode":400,"message":"Plan is no longer available","error":"Bad Request"}}}}}},"401":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":401,"message":"You are not logged in","error":"Unauthorized"}}}}}},"403":{"content":{"application/json":{"examples":{"forbidden":{"value":{"statusCode":403,"message":"This plan cannot be used with this billing cycle.","error":"Forbidden"}}}}}},"404":{"content":{"application/json":{"examples":{"notFound":{"value":{"statusCode":404,"message":"Plan not found","error":"Not found"}},"discountNotFound":{"value":{"statusCode":404,"message":"Discount not found","error":"Not found"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error","error":"Internal server error"}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"billingCycle":{"description":"The billing cycle for the plan. Must be a valid number corresponding to the plan's available billing cycles.","type":"string"},"discount":{"description":"The discount code to apply to the plan. Must be a valid discount code.","type":"string"}}}},"multipart/form-data":{"schema":{"type":"object","properties":{"billingCycle":{"description":"The billing cycle for the plan. Must be a valid number corresponding to the plan's available billing cycles.","type":"string"},"discount":{"description":"The discount code to apply to the plan. Must be a valid discount code.","type":"string"}}}},"text/plain":{"schema":{"type":"object","properties":{"billingCycle":{"description":"The billing cycle for the plan. Must be a valid number corresponding to the plan's available billing cycles.","type":"string"},"discount":{"description":"The discount code to apply to the plan. Must be a valid discount code.","type":"string"}}}}}}}},"/api/staff/{collection}/{id}/delete/":{"delete":{"operationId":"deleteApiStaffByCollectionByIdDelete","summary":"Delete a specific document from a collection","description":"This endpoint allows an admin to delete a specific document from a collection by its ID. STAFF users have limited access to certain collections (invoices, itemNotes). ADMINS have access to every collection.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Field deleted.","error":null,"field":"field details"}}}}}},"403":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":403,"error":"Unauthorized","message":"Invalid token"}},"forbidden":{"value":{"statusCode":403,"error":"Forbidden","message":"You are not allowed to access this resource"}}}}}},"404":{"content":{"application/json":{"examples":{"notFound":{"value":{"statusCode":404,"error":"Not Found","message":"Field not found"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"error":"Internal Server Error","message":"Internal Server Error"}}}}}}},"parameters":[{"schema":{"type":"string"},"in":"path","name":"collection","required":true},{"schema":{"type":"string"},"in":"path","name":"id","required":true}]}},"/api/staff/{collection}/{id}/edit/":{"post":{"parameters":[{"schema":{"type":"string"},"in":"path","name":"collection","required":true},{"schema":{"type":"string"},"in":"path","name":"id","required":true}],"operationId":"postApiStaffByCollectionByIdEdit","summary":"Edit a document in a collection","description":"This endpoint allows authorized users to edit a document in a specified collection. Staff users have limited access to certain collections, while admin users have full access.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Field edited.","error":null,"field":"Updated field details"}}}}}},"403":{"content":{"application/json":{"examples":{"forbidden":{"value":{"statusCode":403,"message":"You are not allowed to access this resource","error":"Forbidden"}}}}}},"404":{"content":{"application/json":{"examples":{"notFound":{"value":{"statusCode":404,"message":"Field not found","error":"Not Found"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal Server Error","error":"Internal Server Error"}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"body":{"description":"The JSON string containing the fields to update.","type":"string"}},"required":["body"]}},"multipart/form-data":{"schema":{"type":"object","properties":{"body":{"description":"The JSON string containing the fields to update.","type":"string"}},"required":["body"]}},"text/plain":{"schema":{"type":"object","properties":{"body":{"description":"The JSON string containing the fields to update.","type":"string"}},"required":["body"]}}}}}},"/api/staff/conncheck/{service}/":{"get":{"operationId":"getApiStaffConncheckByService","summary":"Test service connection","description":"This endpoint tests the connection to a specified service platform. It requires an admin token for authorization.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"error":null}}}}}},"403":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":403,"error":"Unauthorized","message":"Invalid token"}},"forbidden":{"value":{"statusCode":403,"error":"Forbidden","message":"You are not allowed to access this resource"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"error":"Error"}}}}}}},"parameters":[{"schema":{"type":"string"},"in":"path","name":"service","required":true}]}},"/api/staff/{collection}/share/{key}/":{"get":{"operationId":"getApiStaffByCollectionShareByKey","summary":"Get shared collection data","description":"This endpoint retrieves all collection data that contains the specified key. Only accessible by users with STAFF or ADMIN rank. This endpoint is used to generate Pie charts on the staff dashboard.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Share found","error":null,"result":{"key1":10,"key2":5}}}}}}},"403":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":403,"message":"Invalid token","error":"Unauthorized"}},"forbidden":{"value":{"statusCode":403,"message":"You are not allowed to access this resource","error":"Forbidden"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error","error":"Internal server error"}}}}}}},"parameters":[{"schema":{"type":"string"},"in":"path","name":"collection","required":true},{"schema":{"type":"string"},"in":"path","name":"key","required":true}]}},"/api/staff/{collection}/create/":{"post":{"parameters":[{"schema":{"type":"string"},"in":"path","name":"collection","required":true}],"operationId":"postApiStaffByCollectionCreate","summary":"Create a new field in a collection","description":"This endpoint allows authorized users to create a new field in a specified collection. Only users with ADMIN rank or STAFF rank (with specific collection access) are allowed.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Field created.","error":null,"field":{"acknowledged":true,"insertedId":"new_field_id"}}}}}}},"403":{"content":{"application/json":{"examples":{"forbidden":{"value":{"statusCode":403,"message":"You are not allowed to access this resource","error":"Forbidden"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal Server Error","error":"Internal Server Error"}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"collection":{"description":"The name of the collection where the new field will be created.","type":"string"},"data":{"description":"The data to be inserted into the specified collection.","type":"object","patternProperties":{"^(.*)$":{}}}},"required":["collection","data"]}},"multipart/form-data":{"schema":{"type":"object","properties":{"collection":{"description":"The name of the collection where the new field will be created.","type":"string"},"data":{"description":"The data to be inserted into the specified collection.","type":"object","patternProperties":{"^(.*)$":{}}}},"required":["collection","data"]}},"text/plain":{"schema":{"type":"object","properties":{"collection":{"description":"The name of the collection where the new field will be created.","type":"string"},"data":{"description":"The data to be inserted into the specified collection.","type":"object","patternProperties":{"^(.*)$":{}}}},"required":["collection","data"]}}}}}},"/api/staff/{collection}/list/":{"get":{"operationId":"getApiStaffByCollectionList","summary":"List items in a collection","description":"This endpoint retrieves a paginated list of items from a specified collection. The user must have STAFF or ADMIN rank to access this resource.","query":{"page":{"description":"The page number to retrieve. Defaults to 1.","type":"string"},"pageSize":{"description":"The number of items per page. Defaults to 20.","type":"string"},"order":{"description":"The order of the items. Use 'asc' for ascending or 'desc' for descending. Defaults to 'asc'.","type":"string"}},"responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"error":null,"result":[{}],"metadata":{"totalCount":100,"page":1,"pageSize":20,"pageCount":5}}}}}}},"403":{"content":{"application/json":{"examples":{"forbidden":{"value":{"statusCode":403,"message":"You are not allowed to access this resource","error":"Forbidden"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error","error":"Internal server error"}}}}}}},"parameters":[{"schema":{"type":"string"},"in":"path","name":"collection","required":true}]}},"/api/staff/queues/{id}/clear/":{"post":{"operationId":"postApiStaffQueuesByIdClear","summary":"Clear server queue","description":"This endpoint allows an admin to clear the server queue for a specific location. The user must have an ADMIN rank to access this resource.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200}}}}}},"403":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":403,"error":"Unauthorized","message":"Invalid token"}},"forbidden":{"value":{"statusCode":403,"error":"Forbidden","message":"You are not allowed to access this resource"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error","error":"Internal server error"}}}}}}},"parameters":[{"schema":{"type":"string"},"in":"path","name":"id","required":true}]}},"/api/staff/migration/rs/":{"post":{"parameters":[],"operationId":"postApiStaffMigrationRs","summary":"Switch instance mode to Resources Splitting","description":"This endpoint switches the instance mode to Resources Splitting. It converts user balances to coins, sets expiration for all servers, removes plans, and disables automatic renewals.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Instance mode updated successfully.","error":null}}}}}},"400":{"content":{"application/json":{"examples":{"invalidInput":{"value":{"statusCode":400,"message":"Invalid payload input","error":"Bad Request"}}}}}},"403":{"content":{"application/json":{"examples":{"forbidden":{"value":{"statusCode":403,"message":"You are not allowed to access this resource","error":"Forbidden"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal Server Error","error":"Internal Server Error"}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"balanceToCoinsRatio":{"description":"The ratio to convert user balance into coins. Must be a positive number.","type":"number"},"expirationDelay":{"description":"The delay in seconds to set expiration for all servers. Must be a positive number.","type":"number"}},"required":["balanceToCoinsRatio","expirationDelay"]}},"multipart/form-data":{"schema":{"type":"object","properties":{"balanceToCoinsRatio":{"description":"The ratio to convert user balance into coins. Must be a positive number.","type":"number"},"expirationDelay":{"description":"The delay in seconds to set expiration for all servers. Must be a positive number.","type":"number"}},"required":["balanceToCoinsRatio","expirationDelay"]}},"text/plain":{"schema":{"type":"object","properties":{"balanceToCoinsRatio":{"description":"The ratio to convert user balance into coins. Must be a positive number.","type":"number"},"expirationDelay":{"description":"The delay in seconds to set expiration for all servers. Must be a positive number.","type":"number"}},"required":["balanceToCoinsRatio","expirationDelay"]}}}}}},"/api/server/create/":{"post":{"parameters":[],"operationId":"postApiServerCreate","summary":"Create a new server","description":"This endpoint allows users to create a new server with specified configurations. It validates user permissions, resource limits, and optional per-server plans.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Server added to queue","error":null}}}}}},"400":{"content":{"application/json":{"examples":{"invalidInput":{"value":{"statusCode":400,"message":"Invalid payload input. Verify that you have all the required fields.","error":"Bad Request"}}}}}},"403":{"content":{"application/json":{"examples":{"forbidden":{"value":{"statusCode":403,"message":"You do not have the required plan to create a server on this location.","error":"Forbidden"}}}}}},"429":{"content":{"application/json":{"examples":{"rateLimited":{"value":{"statusCode":429,"message":"You are being ratelimited","error":"Too Many Requests"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"An unknown error occurred while creating the server. Please try again later.","error":"Internal Server Error"}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"description":"The name of the server to be created.","type":"string"},"software":{"description":"The software/egg ID for the server.","type":"string"},"cpu":{"description":"The percentage of CPU allocated to the server.","type":"number"},"disk":{"description":"The amount of disk space (in MB) allocated to the server.","type":"number"},"memory":{"description":"The amount of memory (in MB) allocated to the server.","type":"number"},"databases":{"description":"The number of databases allocated to the server.","type":"number"},"backups":{"description":"The number of backups allowed for the server.","type":"number"},"allocations":{"description":"The number of allocations (ports) for the server.","type":"number"},"location":{"description":"The location ID where the server will be created.","type":"string"},"plan":{"description":"The plan ID to be used for the server (required for per-server plans).","type":"string"},"billingCycle":{"description":"The billing cycle for the server (required for per-server plans).","type":"number"},"discount":{"description":"The discount code to be applied to the server (if any).","type":"string"},"turnstile":{"description":"The Cloudflare Turnstile response token.","type":"string"}},"required":["name","software","location"]}},"multipart/form-data":{"schema":{"type":"object","properties":{"name":{"description":"The name of the server to be created.","type":"string"},"software":{"description":"The software/egg ID for the server.","type":"string"},"cpu":{"description":"The percentage of CPU allocated to the server.","type":"number"},"disk":{"description":"The amount of disk space (in MB) allocated to the server.","type":"number"},"memory":{"description":"The amount of memory (in MB) allocated to the server.","type":"number"},"databases":{"description":"The number of databases allocated to the server.","type":"number"},"backups":{"description":"The number of backups allowed for the server.","type":"number"},"allocations":{"description":"The number of allocations (ports) for the server.","type":"number"},"location":{"description":"The location ID where the server will be created.","type":"string"},"plan":{"description":"The plan ID to be used for the server (required for per-server plans).","type":"string"},"billingCycle":{"description":"The billing cycle for the server (required for per-server plans).","type":"number"},"discount":{"description":"The discount code to be applied to the server (if any).","type":"string"},"turnstile":{"description":"The Cloudflare Turnstile response token.","type":"string"}},"required":["name","software","location"]}},"text/plain":{"schema":{"type":"object","properties":{"name":{"description":"The name of the server to be created.","type":"string"},"software":{"description":"The software/egg ID for the server.","type":"string"},"cpu":{"description":"The percentage of CPU allocated to the server.","type":"number"},"disk":{"description":"The amount of disk space (in MB) allocated to the server.","type":"number"},"memory":{"description":"The amount of memory (in MB) allocated to the server.","type":"number"},"databases":{"description":"The number of databases allocated to the server.","type":"number"},"backups":{"description":"The number of backups allowed for the server.","type":"number"},"allocations":{"description":"The number of allocations (ports) for the server.","type":"number"},"location":{"description":"The location ID where the server will be created.","type":"string"},"plan":{"description":"The plan ID to be used for the server (required for per-server plans).","type":"string"},"billingCycle":{"description":"The billing cycle for the server (required for per-server plans).","type":"number"},"discount":{"description":"The discount code to be applied to the server (if any).","type":"string"},"turnstile":{"description":"The Cloudflare Turnstile response token.","type":"string"}},"required":["name","software","location"]}}}}}},"/api/staff/settings/edit/":{"post":{"parameters":[],"operationId":"postApiStaffSettingsEdit","summary":"Edit instance settings","description":"This endpoint allows an admin user to edit instance settings. The settings are provided as an array of objects containing the key and value to update. Use 'REMOVE_FIELD' as the value to remove a field.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Settings updated.","error":null}}}}}},"403":{"content":{"application/json":{"examples":{"forbidden":{"value":{"statusCode":403,"message":"You are not allowed to access this resource","error":"Forbidden"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal Server Error","error":"Internal Server Error"}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"key":{"description":"The key of the setting to update.","type":"string"},"value":{"anyOf":[{"description":"The new value for the setting. Use 'REMOVE_FIELD' to remove the field.","type":"string"},{"description":"Set the value to null if applicable.","type":"null"}]}},"required":["key","value"]}}},"multipart/form-data":{"schema":{"type":"array","items":{"type":"object","properties":{"key":{"description":"The key of the setting to update.","type":"string"},"value":{"anyOf":[{"description":"The new value for the setting. Use 'REMOVE_FIELD' to remove the field.","type":"string"},{"description":"Set the value to null if applicable.","type":"null"}]}},"required":["key","value"]}}},"text/plain":{"schema":{"type":"array","items":{"type":"object","properties":{"key":{"description":"The key of the setting to update.","type":"string"},"value":{"anyOf":[{"description":"The new value for the setting. Use 'REMOVE_FIELD' to remove the field.","type":"string"},{"description":"Set the value to null if applicable.","type":"null"}]}},"required":["key","value"]}}}}}}},"/api/staff/settings/testemail/":{"post":{"parameters":[],"operationId":"postApiStaffSettingsTestemail","summary":"Send a test email","description":"This endpoint allows an admin user to send a test email to verify email settings.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Successfully sent test email.","error":null}}}}}},"400":{"content":{"application/json":{"examples":{"missingParameters":{"value":{"statusCode":400,"message":"Missing parameters","error":"Bad Request"}}}}}},"403":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":403,"message":"Invalid token","error":"Unauthorized"}},"forbidden":{"value":{"statusCode":403,"message":"You are not allowed to access this resource","error":"Forbidden"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal Server Error","error":"Internal Server Error"}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"email":{"description":"The email address to which the test email will be sent. Must be a valid email format.","type":"string"}},"required":["email"]}},"multipart/form-data":{"schema":{"type":"object","properties":{"email":{"description":"The email address to which the test email will be sent. Must be a valid email format.","type":"string"}},"required":["email"]}},"text/plain":{"schema":{"type":"object","properties":{"email":{"description":"The email address to which the test email will be sent. Must be a valid email format.","type":"string"}},"required":["email"]}}}}}},"/api/staff/deleteInactiveUsers/":{"delete":{"operationId":"deleteApiStaffDeleteInactiveUsers","responses":{"200":{}}}},"/api/staff/search/{collection}/":{"get":{"operationId":"getApiStaffSearchByCollection","summary":"Search in a collection","description":"This endpoint allows staff or admin users to search within a specified collection. The search can be filtered by key and query parameters.\n- `key`: The field to search by (e.g., `_id`, `referrer`, `all`, etc.).\n- `q`: The query value to match against the specified key.\n- `order`: The sort order of the results (`asc` for ascending, `desc` for descending).\n- `limit`: The maximum number of results to return.\n- `type`: The type of comparison (e.g., `gt` for greater than).\n","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Success","error":null,"result":[]}}}}}},"400":{"content":{"application/json":{"examples":{"badRequest":{"value":{"statusCode":400,"message":"Bad request","error":"Bad request"}}}}}},"403":{"content":{"application/json":{"examples":{"forbidden":{"value":{"statusCode":403,"message":"Forbidden","error":"You are not allowed to access this resource"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error","error":"Internal server error"}}}}}}},"parameters":[{"schema":{"type":"string"},"in":"path","name":"collection","required":true}]}},"/api/staff/migration/psp/":{"post":{"parameters":[],"operationId":"postApiStaffMigrationPsp","summary":"Migrate to per-server plans","description":"This endpoint migrates the system to per-server plans. It converts user plans and coins to balance, sets expiration for servers, and optionally deletes or unlists plans.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Instance mode updated successfully.","error":null}}}}}},"400":{"content":{"application/json":{"examples":{"invalidInput":{"value":{"statusCode":400,"message":"Invalid payload input","error":"Bad Request"}}}}}},"403":{"content":{"application/json":{"examples":{"forbidden":{"value":{"statusCode":403,"message":"You are not allowed to access this resource","error":"Forbidden"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error","error":"Internal Server Error"}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"planPriceToBalanceRatio":{"description":"The ratio to convert plan prices to balance. Must be a valid number.","type":"number"},"coinsToBalanceRate":{"description":"The rate to convert coins to balance. Must be a valid number.","type":"number"},"expirationDelay":{"description":"The delay in seconds to set expiration for all servers. Must be a valid number.","type":"number"},"deletePlans":{"description":"Whether to delete all plans. Defaults to false.","type":"boolean"}},"required":["planPriceToBalanceRatio","coinsToBalanceRate","expirationDelay"]}},"multipart/form-data":{"schema":{"type":"object","properties":{"planPriceToBalanceRatio":{"description":"The ratio to convert plan prices to balance. Must be a valid number.","type":"number"},"coinsToBalanceRate":{"description":"The rate to convert coins to balance. Must be a valid number.","type":"number"},"expirationDelay":{"description":"The delay in seconds to set expiration for all servers. Must be a valid number.","type":"number"},"deletePlans":{"description":"Whether to delete all plans. Defaults to false.","type":"boolean"}},"required":["planPriceToBalanceRatio","coinsToBalanceRate","expirationDelay"]}},"text/plain":{"schema":{"type":"object","properties":{"planPriceToBalanceRatio":{"description":"The ratio to convert plan prices to balance. Must be a valid number.","type":"number"},"coinsToBalanceRate":{"description":"The rate to convert coins to balance. Must be a valid number.","type":"number"},"expirationDelay":{"description":"The delay in seconds to set expiration for all servers. Must be a valid number.","type":"number"},"deletePlans":{"description":"Whether to delete all plans. Defaults to false.","type":"boolean"}},"required":["planPriceToBalanceRatio","coinsToBalanceRate","expirationDelay"]}}}}}},"/api/staff/instance/":{"get":{"operationId":"getApiStaffInstance","summary":"Get application settings","description":"This endpoint retrieves application settings. Only accessible by users with ADMIN rank.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"error":null,"settings":{"key1":"value1","key2":"value2"}}}}}}},"403":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":403,"error":"Unauthorized","message":"Invalid token"}},"forbidden":{"value":{"statusCode":403,"error":"Forbidden","message":"You are not allowed to access this resource"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"error":"Internal Server Error","message":"Internal Server Error"}}}}}}}}},"/api/staff/adventCalendarStats/":{"get":{"operationId":"getApiStaffAdventCalendarStats","summary":"Get Advent Calendar Stats","description":"This endpoint retrieves statistics for the advent calendar, including the number of openings by day, reward repartition per day, and openings by hour.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"error":null,"results":{"openingsByDay":[{"_id":"2023-12-01","count":100}],"rewardrepartitionperday":[{"_id":"2023-12-01","rewards":[{"reward":"gold","count":50}]}],"openingsByHour":[{"day":"2023-12-01","hours":[{"hour":"0","count":10}]}]}}}}}}},"403":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":403,"error":"Unauthorized","message":"Invalid token"}},"forbidden":{"value":{"statusCode":403,"error":"Forbidden","message":"You are not allowed to access this resource"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"error":"Internal Server Error","message":"Internal Server Error"}}}}}}}}},"/api/staff/disableUser2FA/":{"post":{"parameters":[],"operationId":"postApiStaffDisableUser2FA","summary":"Disable a user's 2FA methods","description":"This endpoint allows an admin or staff member to disable all 2FA methods for a specific user by removing all associated passkeys.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"error":null}}}}}},"400":{"content":{"application/json":{"examples":{"missingParameters":{"value":{"statusCode":400,"error":"Bad Request","message":"Missing parameters"}}}}}},"403":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":403,"error":"Unauthorized","message":"Invalid token"}},"forbidden":{"value":{"statusCode":403,"error":"Forbidden","message":"You are not allowed to access this resource"}},"forbiddenAdmin":{"value":{"statusCode":403,"error":"Forbidden","message":"You are not allowed to remove 2fa methods for an admin, unless you are an admin yourself"}}}}}},"404":{"content":{"application/json":{"examples":{"userNotFound":{"value":{"statusCode":404,"error":"Not Found","message":"User not found"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error, check the details.","error":"Internal server error"}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"user":{"description":"The ID of the user whose 2FA methods should be disabled.","type":"string"}},"required":["user"]}},"multipart/form-data":{"schema":{"type":"object","properties":{"user":{"description":"The ID of the user whose 2FA methods should be disabled.","type":"string"}},"required":["user"]}},"text/plain":{"schema":{"type":"object","properties":{"user":{"description":"The ID of the user whose 2FA methods should be disabled.","type":"string"}},"required":["user"]}}}}}},"/api/staff/addCoins/":{"post":{"parameters":[],"operationId":"postApiStaffAddCoins","summary":"Add coins to a user's account","description":"This endpoint allows an admin to add coins to a user's account.\nWARNING: This endpoint should NEVER be used on the client side. It has no rate-limits, or any checks. It adds coins and that's it. There is no special logic behind it. If you're interested in making your own coin earning system, you should implement your own backend with your own checks before using this endpoint.\n\n**DEPRECATED** *(will be removed in a future update)*: Use `/api/staff/{collection}/{id}/edit` instead (with `users` as the collection).","deprecated":true,"responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Added coins to user.","error":null}}}}}},"400":{"content":{"application/json":{"examples":{"invalidInput":{"value":{"statusCode":400,"message":"Missing parameters","error":"Bad Request"}},"invalidCoins":{"value":{"statusCode":400,"message":"Invalid coins amount","error":"Bad Request"}}}}}},"403":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":403,"message":"Invalid token","error":"Unauthorized"}},"forbidden":{"value":{"statusCode":403,"message":"You are not allowed to access this resource","error":"Forbidden"}}}}}},"404":{"content":{"application/json":{"examples":{"userNotFound":{"value":{"statusCode":404,"message":"User not found","error":"Not Found"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal Server Error","error":"Internal Server Error"}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"user":{"description":"The ID of the user to whom coins will be added. Must be a valid MongoDB ObjectId.","type":"string"},"coins":{"description":"The number of coins to add to the user's account. Must be a valid number.","type":"number"}},"required":["user","coins"]}},"multipart/form-data":{"schema":{"type":"object","properties":{"user":{"description":"The ID of the user to whom coins will be added. Must be a valid MongoDB ObjectId.","type":"string"},"coins":{"description":"The number of coins to add to the user's account. Must be a valid number.","type":"number"}},"required":["user","coins"]}},"text/plain":{"schema":{"type":"object","properties":{"user":{"description":"The ID of the user to whom coins will be added. Must be a valid MongoDB ObjectId.","type":"string"},"coins":{"description":"The number of coins to add to the user's account. Must be a valid number.","type":"number"}},"required":["user","coins"]}}}}}},"/api/staff/resetInstance/":{"post":{"operationId":"postApiStaffResetInstance","summary":"Reset instance","description":"This endpoint resets the entire instance by deleting all servers, clearing required collections, and reinitializing test collections. Only accessible to users with ADMIN rank.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"configurationCode":"example_configuration_code"}}}}}},"403":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":403,"error":"Unauthorized","message":"Invalid token"}},"forbidden":{"value":{"statusCode":403,"error":"Forbidden","message":"You are not allowed to access this resource"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error, check the details.","error":"Internal server error","details":"Error details"}}}}}}}}},"/api/staff/transactions/share/":{"get":{"operationId":"getApiStaffTransactionsShare","summary":"Get transaction statistics","description":"This endpoint retrieves transaction statistics grouped by method and month. It requires an admin token for access.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Transactions found","error":null,"result":{"method":{"volume":1000,"count":10,"percentage":0.5}},"total":{"volume":5000,"count":50},"byMonth":[{"_id":{"month":1,"year":2023},"volume":2000,"count":20,"paypal":1000,"stripe":500,"coingate":300,"cashfree":200,"litepay":0,"staffForcePay":0,"growth":{"volume":10,"count":5}}],"estimatedRevenues":1500}}}}}},"403":{"content":{"application/json":{"examples":{"forbidden":{"value":{"statusCode":403,"message":"Forbidden","error":"You are not allowed to access this resource"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error","error":"An unexpected error occurred"}}}}}}}}},"/api/staff/forceLocDelete/":{"post":{"operationId":"postApiStaffForceLocDelete","summary":"Force delete a location","description":"This endpoint allows an admin to forcefully delete a location and all associated servers. Only users with the ADMIN rank can access this resource.","body":{"type":"object","properties":{"location":{"description":"The ID of the location to delete.","type":"string"}},"required":["location"]},"responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Successfully deleted the location and all associated servers"}}}}}},"400":{"content":{"application/json":{"examples":{"missingParameters":{"value":{"statusCode":400,"error":"Bad Request","message":"Missing parameters"}}}}}},"403":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":403,"error":"Unauthorized","message":"Invalid token"}},"forbidden":{"value":{"statusCode":403,"error":"Forbidden","message":"You are not allowed to access this resource"}}}}}},"404":{"content":{"application/json":{"examples":{"notFound":{"value":{"statusCode":404,"error":"Not Found","message":"Location not found"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error, check the details.","error":"Internal server error"}}}}}}}}},"/api/staff/updateLocCoinRenewalRules/":{"post":{"parameters":[],"operationId":"postApiStaffUpdateLocCoinRenewalRules","summary":"Update location coin renewal rules","description":"This endpoint updates the coin renewal rules for a specific location. It requires the location ID and ensures that the requester has the appropriate permissions (ADMIN or STAFF).","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200}}}}}},"400":{"content":{"application/json":{"examples":{"missingParameters":{"value":{"statusCode":400,"error":"Bad Request","message":"Missing parameters"}}}}}},"403":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":403,"error":"Unauthorized","message":"Invalid token"}},"forbidden":{"value":{"statusCode":403,"error":"Forbidden","message":"You are not allowed to access this resource"}}}}}},"404":{"content":{"application/json":{"examples":{"notFound":{"value":{"statusCode":404,"error":"Not Found","message":"Location not found"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error, check the details.","error":"Internal server error"}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"location":{"description":"The ID of the location whose coin renewal rules are to be updated.","type":"string"}},"required":["location"]}},"multipart/form-data":{"schema":{"type":"object","properties":{"location":{"description":"The ID of the location whose coin renewal rules are to be updated.","type":"string"}},"required":["location"]}},"text/plain":{"schema":{"type":"object","properties":{"location":{"description":"The ID of the location whose coin renewal rules are to be updated.","type":"string"}},"required":["location"]}}}}}},"/api/staff/getAlts/{id}/":{"get":{"operationId":"getApiStaffGetAltsById","summary":"Get possible alt accounts for a user","description":"This endpoint retrieves possible alternate accounts for a given user ID. It requires the requester to have ADMIN or STAFF privileges. Optionally, it can trigger an alt detection action.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"alts":[{"_id":"alt_user_id","username":"alt_username","email":"alt_email"}],"error":null}}}}}},"400":{"content":{"application/json":{"examples":{"missingParams":{"value":{"statusCode":400,"message":"Missing parameters","error":"Bad Request"}}}}}},"403":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":403,"message":"Invalid token","error":"Unauthorized"}},"forbidden":{"value":{"statusCode":403,"message":"You are not allowed to access this resource","error":"Forbidden"}}}}}},"404":{"content":{"application/json":{"examples":{"userNotFound":{"value":{"statusCode":404,"message":"User not found","error":"Not Found"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error, check the details.","error":"Internal server error","details":"Error details"}}}}}}},"parameters":[{"schema":{"type":"string"},"in":"path","name":"id","required":true}]}},"/api/user/{id}/servers/":{"get":{"operationId":"getApiUserByIdServers","summary":"Get user servers","description":"This endpoint retrieves the servers and servers queue associated with a specific user ID. The user ID is passed as a parameter in the URL.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Servers found","servers":["server_id_1","server_id_2"],"serversQueue":["queue_id_1","queue_id_2"]}}}}}},"404":{"content":{"application/json":{"examples":{"notFound":{"value":{"statusCode":404,"error":"Not found","message":"User not found"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error, check the details.","error":"Internal server error","details":"Error details"}}}}}}},"parameters":[{"schema":{"type":"string"},"in":"path","name":"id","required":true}]}},"/api/subscription/cancel/":{"post":{"operationId":"postApiSubscriptionCancel","summary":"Cancel a subscription","description":"This endpoint allows a user to cancel their active subscription. It handles both Stripe and PayPal subscriptions and ensures no further invoices are generated.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Cancelled subscription"}}}}}},"400":{"content":{"application/json":{"examples":{"badRequest":{"value":{"statusCode":400,"error":"Bad request","message":"Your subscription has already been cancelled"}}}}}},"403":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":403,"error":"Unauthorized","message":"Invalid token"}}}}}},"404":{"content":{"application/json":{"examples":{"notFound":{"value":{"statusCode":404,"error":"Not found","message":"You do not have a running subscription"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"error":"Internal server error","message":"Something went wrong"}}}}}}}}},"/api/user/{id}/referrals/":{"get":{"operationId":"getApiUserByIdReferrals","summary":"Get user referrals","description":"This endpoint retrieves the referrals of a user by their ID. It also calculates the total purchases made by the referrals. If not authenticated, it will just return the number of referrals.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Referrals found","error":null,"referrals":[{"username":"referral_user","email":"re...al@example.com","avatarUrl":"https://example.com/avatar.jpg","purchases":3,"purchasesTotal":150}],"total":1,"purchases":{"count":3,"amount":150},"code":"referral_code"}}}}}},"404":{"content":{"application/json":{"examples":{"notFound":{"value":{"statusCode":404,"message":"User not found","error":"Not found"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error","error":"Internal server error"}}}}}}},"parameters":[{"schema":{"type":"string"},"in":"path","name":"id","required":true}]}},"/api/user/{id}/info/":{"get":{"operationId":"getApiUserByIdInfo","summary":"Get user information","description":"This endpoint retrieves information about a user by their ID. If the request includes a valid authorization token, additional details may be included for authorized users.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"User found","error":null,"data":{"id":"user_id","username":"username","avatarUrl":"avatar_url","balance":100,"coins":50,"rank":"USER","firstLogin":1672531200,"lastSeen":1672617600}}}}}}},"404":{"content":{"application/json":{"examples":{"notFound":{"value":{"statusCode":404,"message":"User not found","error":"Not found","data":{"id":"0","username":"notfound","avatarUrl":"https://s6.imgcdn.dev/3awwg.webp","balance":0,"coins":0,"rank":"USER","firstLogin":0,"lastSeen":0}}}}}}}},"parameters":[{"schema":{"type":"string"},"in":"path","name":"id","required":true}]}},"/api/user/{id}/referrals/userRules/":{"get":{"operationId":"getApiUserByIdReferralsUserRules","summary":"Get minimum referrals needed for custom link","description":"This endpoint retrieves the minimum number of referrals required for a user to obtain a custom link, based on their subscription plan.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"rules":{"minimumReferralsForCustomLink":5}}}}}}},"403":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":403,"error":"Unauthorized","message":"Invalid token"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"error":"Internal Server Error","message":"Internal Server Error"}}}}}}},"parameters":[{"schema":{"type":"string"},"in":"path","name":"id","required":true}]}},"/api/user/{id}/permissions/":{"get":{"operationId":"getApiUserByIdPermissions","summary":"Get user permissions","description":"This endpoint retrieves the permissions of a user based on their ID. It checks the user's rank and first login date to determine their permissions.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"User found","error":null,"permissions":{"canCreateRedeemCodes":true,"willBeAbleToCreateRedeemCodesAt":null}}}}}}},"404":{"content":{"application/json":{"examples":{"notFound":{"value":{"statusCode":404,"message":"User not found","error":"Not found"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal Server Error","error":"Internal Server Error","permissions":{"canCreateRedeemCodes":false,"willBeAbleToCreateRedeemCodesAt":null}}}}}}}},"parameters":[{"schema":{"type":"string"},"in":"path","name":"id","required":true}]}},"/api/user/discord/{did}/":{"get":{"operationId":"getApiUserDiscordByDid","summary":"Fetch user by Discord ID","description":"This endpoint fetches a user from the database using their Discord ID.\n\n**DEPRECATED**: This endpoint is deprecated. Please use the `/api/staff/search/{collections}` endpoint and specify `users` as the collection.","deprecated":true,"responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"User found","error":null,"userid":"user_id"}}}}}},"404":{"content":{"application/json":{"examples":{"notFound":{"value":{"statusCode":404,"message":"User not found","error":"Not found"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error","error":"Internal server error"}}}}}}},"parameters":[{"schema":{"type":"string"},"in":"path","name":"did","required":true}]}},"/api/user/funds/history/":{"get":{"operationId":"getApiUserFundsHistory","summary":"Get user transaction history","description":"This endpoint retrieves the last 10 balance-related transactions for the authenticated user, sorted by date in descending order.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Transaction history found","error":null,"transactions":[{"_id":"transaction_id","user":"user_id","method":"balance","amount":100,"date":"2023-01-01T00:00:00.000Z"}]}}}}}},"401":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":401,"message":"You are not logged in","error":"Unauthorized"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Something went wrong","error":"Internal server error"}}}}}}}}},"/api/user/{id}/invoices/":{"get":{"operationId":"getApiUserByIdInvoices","summary":"Get user invoices","description":"This endpoint retrieves invoices for a specific user. The user must provide a valid authorization token. Optionally, older invoices can be included by setting the `showOlderInvoices` query parameter to `true`.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Invoices found","error":null,"invoices":[{"_id":"invoice_id","uid":"user_id","name":"Invoice Name","paid":true,"duedate":1672531200,"paiddate":1672617600,"created":1672444800,"amount":100,"item":"Service Name","paypalOrder":"paypal_order_id","activationInvoice":true,"discount":null,"received":100,"paidpartial":false,"originalAmount":100,"attachedServer":"server_id"}]}}}}}},"403":{"content":{"application/json":{"examples":{"forbidden":{"value":{"statusCode":403,"message":"You are not allowed to access this resource","error":"Forbidden"}}}}}},"404":{"content":{"application/json":{"examples":{"notFound":{"value":{"statusCode":404,"message":"User not found","error":"Not found"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal Server Error","error":"Internal Server Error"}}}}}}},"parameters":[{"schema":{"type":"string"},"in":"path","name":"id","required":true}]}},"/api/user/funds/topup/":{"post":{"parameters":[],"operationId":"postApiUserFundsTopup","summary":"Create a top-up invoice","description":"This endpoint allows a user to create an invoice for topping up their balance. The user must be authenticated and provide a valid amount.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Created invoice","error":null,"invoice":"invoice_id"}}}}}},"400":{"content":{"application/json":{"examples":{"invalidInput":{"value":{"statusCode":400,"message":"Bad Request","error":"Bad Request"}}}}}},"401":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":401,"message":"You are not logged in","error":"Unauthorized"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Something went wrong","error":"Internal server error"}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"amount":{"description":"The amount to top up the user's balance. Must be a positive number.","type":"number"}},"required":["amount"]}},"multipart/form-data":{"schema":{"type":"object","properties":{"amount":{"description":"The amount to top up the user's balance. Must be a positive number.","type":"number"}},"required":["amount"]}},"text/plain":{"schema":{"type":"object","properties":{"amount":{"description":"The amount to top up the user's balance. Must be a positive number.","type":"number"}},"required":["amount"]}}}}}},"/api/user/gamepanel/reset/":{"post":{"operationId":"postApiUserGamepanelReset","summary":"Reset game panel password","description":"This endpoint allows a user to reset their game panel password. The new password is generated and updated in the Pterodactyl panel.\n\nWARNING: This implementation is specific to Pterodactyl and might change in the future to support other platforms.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Game panel password updated","error":null,"newpassword":"new_generated_password"}}}}}},"401":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":401,"message":"No authorization header","error":"Unauthorized"}}}}}},"403":{"content":{"application/json":{"examples":{"forbidden":{"value":{"statusCode":403,"message":"You are not allowed to access this resource","error":"Forbidden"}}}}}}}}},"/api/user/passkeys/{id}/delete/":{"delete":{"operationId":"deleteApiUserPasskeysByIdDelete","summary":"Delete a user's passkey","description":"This endpoint allows a user to delete a specific passkey by its ID. The user must be authenticated and authorized to perform this action.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200}}}}}},"401":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":401,"error":"Unauthorized","message":"You are not logged in"}}}}}},"404":{"content":{"application/json":{"examples":{"notFound":{"value":{"statusCode":404,"error":"Not found","message":"Passkey not found"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error","error":"Internal server error"}}}}}}},"parameters":[{"schema":{"type":"string"},"in":"path","name":"id","required":true}]}},"/api/user/passkeys/{id}/edit/":{"patch":{"parameters":[{"schema":{"type":"string"},"in":"path","name":"id","required":true}],"operationId":"patchApiUserPasskeysByIdEdit","summary":"Edit a passkey","description":"This endpoint allows a user to edit the name of an existing passkey. The user must be authenticated and the passkey must belong to the user.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200}}}}}},"400":{"content":{"application/json":{"examples":{"missingFields":{"value":{"statusCode":400,"message":"Missing fields"}}}}}},"401":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":401,"error":"Unauthorized","message":"You are not logged in"}}}}}},"404":{"content":{"application/json":{"examples":{"notFound":{"value":{"statusCode":404,"error":"Not found","message":"Passkey not found"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"description":"The new name for the passkey. Must be a non-empty string.","type":"string"}},"required":["name"]}},"multipart/form-data":{"schema":{"type":"object","properties":{"name":{"description":"The new name for the passkey. Must be a non-empty string.","type":"string"}},"required":["name"]}},"text/plain":{"schema":{"type":"object","properties":{"name":{"description":"The new name for the passkey. Must be a non-empty string.","type":"string"}},"required":["name"]}}}}}},"/api/user/passkeys/":{"get":{"operationId":"getApiUserPasskeys","summary":"Get user passkeys","description":"This endpoint retrieves a list of passkeys associated with the authenticated user. The passkeys are sorted by their creation date in descending order.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"passkeys":[{"id":"passkey_id","createdAt":0,"lastUsed":0,"name":"My Passkey"}]}}}}}},"401":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":401,"error":"Unauthorized","message":"You are not logged in"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error","error":"Internal server error"}}}}}}}}},"/api/user/referrals/top/":{"get":{"operationId":"getApiUserReferralsTop","summary":"Get top referrals","description":"This endpoint retrieves the top 100 users with the most referrals. It aggregates referral data and returns user details such as username and avatar URL.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Top referrals found","error":null,"users":[{"_id":"referrer_id","count":10,"user":{"username":"exampleUser","avatarUrl":"https://example.com/avatar.jpg"}}]}}}}}},"400":{"content":{"application/json":{"examples":{"invalidInput":{"value":{"statusCode":400,"message":"Invalid input","error":"Bad request"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error, check the details.","error":"Internal server error","details":"Error details"}}}}}}}}},"/api/user/verify/{code}/":{"post":{"parameters":[{"schema":{"type":"string"},"in":"path","name":"code","required":true}],"operationId":"postApiUserVerifyByCode","summary":"Verify user email","description":"This endpoint verifies a user's email address using a verification code sent to their email. If successful, the user's account is marked as verified.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Successfully verified your account","error":null}}}}}},"400":{"content":{"application/json":{"examples":{"invalidToken":{"value":{"statusCode":400,"message":"Invalid verification token","error":"Bad Request"}}}}}},"404":{"content":{"application/json":{"examples":{"userNotFound":{"value":{"statusCode":404,"message":"User not found","error":"Not found"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal Server Error","error":"Internal Server Error"}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"The verification code sent to the user's email address.","type":"string"}},"required":["code"]}},"multipart/form-data":{"schema":{"type":"object","properties":{"code":{"description":"The verification code sent to the user's email address.","type":"string"}},"required":["code"]}},"text/plain":{"schema":{"type":"object","properties":{"code":{"description":"The verification code sent to the user's email address.","type":"string"}},"required":["code"]}}}}}},"/api/user/referrals/editCode/":{"post":{"parameters":[],"operationId":"postApiUserReferralsEditCode","summary":"Update referral code","description":"This endpoint allows a user to update their referral code. The user must have a valid token, meet the minimum referral requirements, and provide a unique referral code.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Referral code updated","error":null}}}}}},"400":{"content":{"application/json":{"examples":{"invalidInput":{"value":{"statusCode":400,"message":"Invalid payload input","error":"Bad Request"}}}}}},"401":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":401,"message":"No authorization header","error":"Unauthorized"}}}}}},"403":{"content":{"application/json":{"examples":{"forbidden":{"value":{"statusCode":403,"message":"You need at least X referrals to change your referral code.","error":"Forbidden"}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"The new referral code. Must be 3-20 characters long and contain only alphanumeric characters.","type":"string"}},"required":["code"]}},"multipart/form-data":{"schema":{"type":"object","properties":{"code":{"description":"The new referral code. Must be 3-20 characters long and contain only alphanumeric characters.","type":"string"}},"required":["code"]}},"text/plain":{"schema":{"type":"object","properties":{"code":{"description":"The new referral code. Must be 3-20 characters long and contain only alphanumeric characters.","type":"string"}},"required":["code"]}}}}}},"/api/user/presence/":{"post":{"parameters":[],"operationId":"postApiUserPresence","summary":"Update user presence","description":"This endpoint updates the user's last seen time and the path they are currently visiting.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Presence updated successfully"}}}}}},"403":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":403,"message":"Invalid token","error":"Unauthorized"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error","error":"Internal server error"}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"path":{"description":"The path the user is currently visiting.","type":"string"},"uid":{"description":"The unique identifier of the user.","type":"string"}},"required":["path","uid"]}},"multipart/form-data":{"schema":{"type":"object","properties":{"path":{"description":"The path the user is currently visiting.","type":"string"},"uid":{"description":"The unique identifier of the user.","type":"string"}},"required":["path","uid"]}},"text/plain":{"schema":{"type":"object","properties":{"path":{"description":"The path the user is currently visiting.","type":"string"},"uid":{"description":"The unique identifier of the user.","type":"string"}},"required":["path","uid"]}}}}}},"/api/user/info/":{"get":{"operationId":"getApiUserInfo","summary":"Get user information (from token)","description":"This endpoint retrieves user information based on the provided authorization token.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"User found","error":null,"data":{"id":"user_id","username":"username","email":"user@example.com"}}}}}}},"403":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":403,"message":"Invalid token","error":"Unauthorized"}}}}}},"404":{"content":{"application/json":{"examples":{"notFound":{"value":{"statusCode":404,"message":"User not found","error":"Not found"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error","error":"Internal server error"}}}}}}}}},"/api/user/verify/send/":{"post":{"parameters":[],"operationId":"postApiUserVerifySend","summary":"Send verification email","description":"This endpoint allows a user to request a verification email to verify their account. The user must provide a valid authorization token.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Verification email sent successfully.","error":null}}}}}},"400":{"content":{"application/json":{"examples":{"badRequest":{"value":{"statusCode":400,"message":"Bad Request","error":"You have already requested a verification email in the last 5 minutes."}}}}}},"403":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":403,"message":"Invalid token","error":"Unauthorized"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal Server Error","error":"Internal Server Error"}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{}}},"multipart/form-data":{"schema":{"type":"object","properties":{}}},"text/plain":{"schema":{"type":"object","properties":{}}}}}}},"/api/online/":{"get":{"operationId":"getApiOnline","summary":"Get online users","description":"This endpoint retrieves all users who have been active within the last 5 minutes, along with a count of online users per path.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Online users","users":[{"id":"user_id","username":"username","avatarUrl":"avatar_url","lastSeen":1699999999999}],"total":1,"perpath":[{"_id":"/example-path","count":1}]}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error, check the details.","error":"Internal server error","details":"Error details"}}}}}}}}},"/api/user/password/":{"patch":{"parameters":[],"operationId":"patchApiUserPassword","summary":"Change user password","description":"This endpoint allows a user to change their password. The user must provide their current password and a new password that meets the required complexity.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Password changed successfully.","error":null}}}}}},"400":{"content":{"application/json":{"examples":{"invalidInput":{"value":{"statusCode":400,"message":"Invalid input","error":"Bad Request"}},"invalidPassword":{"value":{"statusCode":400,"message":"Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, one number and one special character","error":"Bad Request"}},"missingParameters":{"value":{"statusCode":400,"message":"Missing parameters","error":"Bad Request"}}}}}},"403":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":403,"message":"Invalid token","error":"Unauthorized"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal Server Error","error":"Internal Server Error"}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"password":{"description":"The new password for the user. Must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, one number, and one special character.","type":"string"},"oldPassword":{"description":"The current password of the user. Used to verify the user's identity before changing the password.","type":"string"}},"required":["password","oldPassword"]}},"multipart/form-data":{"schema":{"type":"object","properties":{"password":{"description":"The new password for the user. Must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, one number, and one special character.","type":"string"},"oldPassword":{"description":"The current password of the user. Used to verify the user's identity before changing the password.","type":"string"}},"required":["password","oldPassword"]}},"text/plain":{"schema":{"type":"object","properties":{"password":{"description":"The new password for the user. Must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, one number, and one special character.","type":"string"},"oldPassword":{"description":"The current password of the user. Used to verify the user's identity before changing the password.","type":"string"}},"required":["password","oldPassword"]}}}}}},"/api/sidebar/links/":{"get":{"operationId":"getApiSidebarLinks","summary":"Get the custom sidebar items defined by admins.","responses":{"200":{}}}},"/api/user/profile/":{"patch":{"parameters":[],"operationId":"patchApiUserProfile","summary":"Update user profile","description":"This endpoint allows a user to update their profile information, including username, email, and avatar URL. The request must include a valid authorization token.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Profile edited successfully.","error":null}}}}}},"400":{"content":{"application/json":{"examples":{"missingParameters":{"value":{"statusCode":400,"message":"Missing parameters","error":"Bad Request"}},"invalidUsername":{"value":{"statusCode":400,"message":"Username must be at least 3 characters long and contain only lowercase letters, numbers, periods and underscores.","error":"Bad Request"}},"invalidEmail":{"value":{"statusCode":400,"message":"Invalid email.","error":"Bad Request"}},"disposableEmail":{"value":{"statusCode":400,"message":"Disposable email addresses are not allowed.","error":"Bad Request"}}}}}},"403":{"content":{"application/json":{"examples":{"unauthorized":{"value":{"statusCode":403,"message":"Invalid token","error":"Unauthorized"}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal Server Error","error":"Internal Server Error"}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"username":{"description":"The desired username for the user. Must be 3-16 characters long and contain only lowercase letters, numbers, periods, and underscores.","type":"string"},"email":{"description":"The email address for the user. Must be a valid email format.","type":"string"},"avatarUrl":{"description":"The URL of the user's avatar image.","type":"string"}},"required":["username","email","avatarUrl"]}},"multipart/form-data":{"schema":{"type":"object","properties":{"username":{"description":"The desired username for the user. Must be 3-16 characters long and contain only lowercase letters, numbers, periods, and underscores.","type":"string"},"email":{"description":"The email address for the user. Must be a valid email format.","type":"string"},"avatarUrl":{"description":"The URL of the user's avatar image.","type":"string"}},"required":["username","email","avatarUrl"]}},"text/plain":{"schema":{"type":"object","properties":{"username":{"description":"The desired username for the user. Must be 3-16 characters long and contain only lowercase letters, numbers, periods, and underscores.","type":"string"},"email":{"description":"The email address for the user. Must be a valid email format.","type":"string"},"avatarUrl":{"description":"The URL of the user's avatar image.","type":"string"}},"required":["username","email","avatarUrl"]}}}}}},"/api//":{"get":{"operationId":"getApi","summary":"Get instance status, statistics & public frontend config","description":"This endpoint provides the status of the Shadow's Dash backend, including configuration details, settings, and statistics.","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"statusCode":200,"message":"Shadow's dash backend is running!","error":null,"respondent":"hostname","type":1,"info":{"name":"App Name","logo":"Logo URL","privacy":"Privacy Policy URL","tos":"Terms of Service URL","panelUrl":"Panel URL","warnmsg":"Warning Message","earnReset":1699999999999,"dialog":{"enabled":true,"message":"Popup message"}},"experiments":{"perServerPlans":true,"adventCalendar":false},"umami":"Umami Site ID","settings":{"deletionThreshold":30,"login":{"email":true,"discord":true,"turnstile_sitekey":"sitekey","bg":"backgroundImage","floating":"floatingImage"},"disableMAA":true,"currency":"USD","theme":{"bg":"slate","primary":"blue","font":"default","halloween":false,"christmas":{"snow":true,"theme":true,"adventBg":"backgroundImage"}},"payments":{"stripe":{"publishableKey":"pubkey","enabled":true},"coingate":{"enabled":false},"paypal":{"clientId":"clientId","enabled":true},"cashfree":{"enabled":false,"appid":"appid"},"litepay":{"enabled":false}},"coinEarning":true,"welcomeImage":"welcomeImage","ads":{"site":"adsenseSite","b1":"adsenseBanner1","adservice":"adService","adsterraBanner":"adsterraBannerKey","aadbl":true},"ipd":0,"referrals":true},"currentVersion":"1.0.0","awaitingConfiguration":false,"stats":{"users":{"total":1000},"servers":{"total":100}}}}}}}},"500":{"content":{"application/json":{"examples":{"serverError":{"value":{"statusCode":500,"message":"Internal server error","error":"Database connection failed"}}}}}}}}},"/api/articles/":{"get":{"operationId":"getApiArticles","summary":"Get articles","description":"This endpoint returns the articles stored on this instance.","responses":{"200":{"content":{"application/json":{"examples":{"basic":{"value":{"statusCode":200,"error":null,"articles":[{"_id":"680d10f69ca6d40fc925b8c0","title":"Test article","slug":"test-article","image":"","content":"This is an article","author":"66cfa50b58a04358652846a3 (an user mongo id)","published":1745686774574,"edited":1745686774574}]}}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"examples":{"User not found":{"value":{"statusCode":500,"error":"Internal Server Error"}}}}}}}}},"/api/auth/pwreset/{code}/":{"post":{"parameters":[{"schema":{"type":"string"},"in":"path","name":"code","required":true}],"operationId":"postApiAuthPwresetByCode","summary":"Reset password with a one-time code","description":"This endpoint allows an user to reset their password from a one-time code sent by email upon request. See /api/auth/pwreset/send for more details. No need to specify an user here, as the one-time code is already linked to their account.\nPlease note that it is not possible to reset another user's password using an ADMIN or STAFF key. See /api/staff/{collection}/{id}/edit to edit an user.","responses":{"200":{"content":{"application/json":{"examples":{"basic":{"value":{"statusCode":200,"message":"Successfully updated your password","error":null}}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"examples":{"User not found":{"value":{"statusCode":500,"error":"Internal Server Error"}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"password":{"minLength":8,"description":"Passwords must be at least 8 characters long. Passwords must include at least one uppercase letter, one lowercase letter, one digit, and one special character.","type":"string"}},"required":["password"]}},"multipart/form-data":{"schema":{"type":"object","properties":{"password":{"minLength":8,"description":"Passwords must be at least 8 characters long. Passwords must include at least one uppercase letter, one lowercase letter, one digit, and one special character.","type":"string"}},"required":["password"]}},"text/plain":{"schema":{"type":"object","properties":{"password":{"minLength":8,"description":"Passwords must be at least 8 characters long. Passwords must include at least one uppercase letter, one lowercase letter, one digit, and one special character.","type":"string"}},"required":["password"]}}}}}}}}